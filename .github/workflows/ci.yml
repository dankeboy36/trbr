name: CI
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: test (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Restore Arduino CLI
        uses: actions/cache/restore@v3
        with:
          path: .arduino-cli
          key: ${{ runner.os }}-${{ runner.arch }}-arduino-cli-${{ hashFiles('arduino-cli.json') }}
      - name: Restore `directories.data` folder (CLI)
        uses: actions/cache/restore@v3
        with:
          path: .test-resources/envs/cli
          key: ${{ runner.os }}-${{ runner.arch }}-cli-env-${{ hashFiles('scripts/env/env.cli.json') }}
      - name: Restore `directories.data` folder (Git)
        uses: actions/cache/restore@v3
        with:
          path: .test-resources/envs/git
          key: ${{ runner.os }}-${{ runner.arch }}-git-env-${{ hashFiles('scripts/env/env.git.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Check License
        run: npm run license && git diff --exit-code
      - name: Check Format
        run: npm run format && git diff --exit-code
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test:ci
      - name: Save Arduino CLI
        uses: actions/cache/save@v3
        with:
          path: .arduino-cli
          key: ${{ runner.os }}-${{ runner.arch }}-arduino-cli-${{ hashFiles('arduino-cli.json') }}
      - name: Save `directories.data` folder (CLI)
        uses: actions/cache/save@v3
        with:
          path: .test-resources/envs/cli
          key: ${{ runner.os }}-${{ runner.arch }}-cli-env-${{ hashFiles('scripts/env/env.cli.json') }}
      - name: Store `directories.data` folder (Git)
        uses: actions/cache/save@v3
        with:
          path: .test-resources/envs/git
          key: ${{ runner.os }}-${{ runner.arch }}-git-env-${{ hashFiles('scripts/env/env.git.json') }}

  package:
    name: package (${{ matrix.os }})
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Restore Arduino CLI
        uses: actions/cache/restore@v3
        with:
          path: .arduino-cli
          key: ${{ runner.os }}-${{ runner.arch }}-arduino-cli-${{ hashFiles('arduino-cli.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Package
        run: npm run package
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: build-artifacts-${{ runner.os }}-${{ runner.arch }}
          path: bin/*.zip

  release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [package]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install Dependencies
        run: npm ci
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          pattern: build-artifacts-*
          merge-multiple: true
          path: bin
      - name: Release
        id: release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      release_version: ${{ steps.release.outputs.release_version }}
